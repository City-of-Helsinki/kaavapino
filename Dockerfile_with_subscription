##### Base image #####
FROM registry.access.redhat.com/ubi9/python-39 as base

ENV PYTHONUNBUFFERED 1
ENV SMDEV_CONTAINER_OFF=1
ENV DEBIAN_FRONTEND noninteractive
ENV APP_NAME kaavapino
# Set defaults for Django paths as appropriate for this container
ENV STATIC_ROOT /srv/static
ENV MEDIA_ROOT /srv/media

USER root

# Name the workdir after the project, makes it easier to
# know where you are when troubleshooting
RUN mkdir /$APP_NAME
WORKDIR /$APP_NAME

# Copy entitlements
COPY ./etc-pki-entitlement /etc/pki/entitlement
# Copy subscription manager configurations if required
#COPY ./rhsm-conf /etc/rhsm
#COPY ./rhsm-ca /etc/rhsm/ca
# Delete /etc/rhsm-host to use entitlements from the build container
RUN rm /etc/rhsm-host && \
    # Initialize /etc/yum.repos.d/redhat.repo
    # See <https://access.redhat.com/solutions/1443553>
    yum repolist --disablerepo=* && \
    # Enable the repos you need
    subscription-manager repos --enable codeready-builder-for-rhel-9-x86_64-rpms && \
    dnf -y update && \
    dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm && \
    dnf install -y \
        git \
        binutils \
        gdal \
        geos \
        nc \
        vim && \
    # Remove entitlements and Subscription Manager configs
    rm -rf /etc/pki/entitlement 
    # && \
    #rm -rf /etc/rhsm
    
# Upgrade pip
RUN pip install -U pip

# Install Poetry
RUN pip install poetry

RUN useradd --system -u 1002 -g 0 kaavapinouser && \
    mkdir -p $STATIC_ROOT $MEDIA_ROOT

#RUN subscription-manager remove --all || :
#RUN subscription-manager unregister || :
#RUN subscription-manager clean || :

##### Test image #####
FROM base AS test

# Install python dependencies
COPY poetry.lock pyproject.toml /$APP_NAME/
RUN poetry export -f requirements.txt --output requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# probably only $STATIC_ROOT needs to be group-writable,
# check this later!
RUN chown -R kaavapinouser:0 /$APP_NAME $STATIC_ROOT $MEDIA_ROOT && \
    chmod -R g+rwX /$APP_NAME $STATIC_ROOT $MEDIA_ROOT

# Add entrypoint script
COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh


##### Server image #####
FROM base AS deploy

# Install python dependencies
COPY poetry.lock pyproject.toml ./
RUN poetry export --without dev -f requirements.txt --output requirements.txt
COPY deploy/requirements.txt ./deploy/requirements.txt
RUN pip install --no-cache-dir -r ./deploy/requirements.txt

COPY . .

# probably only $STATIC_ROOT needs to be group-writable,
# check this later!
RUN chown -R kaavapinouser:0 /$APP_NAME $STATIC_ROOT $MEDIA_ROOT && \
    chmod -R g+rwX /$APP_NAME $STATIC_ROOT $MEDIA_ROOT

USER kaavapinouser

CMD deploy/server.sh
